import java.util.*;
import java.lang.*;
import java.io.*;
class Node{
    int data ; Node left,right;
    Node(int d)
    {
        data=d;
        left = right = null;
    }
}

class GFG
 {
     static Node root; 
     Node AtoB (int arr[], int start,int end)
     {
         if(start>end)
         return null;
        int mid = (start+end)/2;
        Node node = new Node(arr[mid]);
        //node.data = arr[mid];
        node.left = AtoB(arr,start,mid-1);
        node.right = AtoB(arr,mid+1,end);
        return node;
         
     }
     void topreorder(Node node)
     {
         if(node == null)
         return;
         System.out.print(node.data+" ");
         topreorder(node.left);
         topreorder(node.right);
     }
	public static void main (String[] args)
	 {
	     Scanner sc=new Scanner(System.in);
	 //code
	 int t = sc.nextInt();
	 while(t-->0)
	 {
	     int size=sc.nextInt();
	     int a[]=new int[size];
	     for(int i=0;i<size;i++)
	     {
	         a[i] = sc.nextInt();
	     }
	     GFG g = new GFG();
	     root = g.AtoB(a,0,size-1);
	     g.topreorder(root);
	     
	 }
	 }
}


Input:
1
7
1 2 3 4 5 6 7

Output:
4 2 1 3 6 5 7
